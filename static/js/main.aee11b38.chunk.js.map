{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Header/Header.module.css","components/App.module.css","components/Header/Header.js","redux/contacts/contactsActions.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Header","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","className","logo","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","mapDispatchToProps","onRemoveContact","contactsActions","connect","state","contacts","items","filter","toLowerCase","includes","TransitionGroup","component","contactList","map","contactListItem","type","onClick","button","ContactForm","handleInputChange","e","setState","target","value","handleNumberChange","handleAddContact","props","onAddContact","form","label","this","onChange","input","required","Component","onChangeFilter","App","heading","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aee11b38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__3dmIb\",\"contactListItem\":\"ContactsList_contactListItem__3tsFQ\",\"button\":\"ContactsList_button__3KPfN\",\"enter\":\"ContactsList_enter__2M8ko\",\"enterActive\":\"ContactsList_enterActive__cjCin\",\"exit\":\"ContactsList_exit__3mrAF\",\"exitActive\":\"ContactsList_exitActive__y39j1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2rJqu\",\"input\":\"Filter_input__1QrC5\",\"enter\":\"Filter_enter__2U5W6\",\"enterActive\":\"Filter_enterActive__1sKO4\",\"exit\":\"Filter_exit__2vxY0\",\"exitActive\":\"Filter_exitActive__1_YEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__17BnM\",\"appear\":\"Header_appear__3NRQF\",\"appearActive\":\"Header_appearActive__U3638\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__Jermm\",\"enter\":\"App_enter__3_tq4\",\"enterActive\":\"App_enterActive__3oATV\",\"exit\":\"App_exit__1fcxW\",\"exitActive\":\"App_exitActive__3k9rQ\"};","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={500} classNames={styles} unmountOnExit>\r\n      <header>\r\n        <h2 className={styles.logo}>Phonebook</h2>\r\n      </header>\r\n    </CSSTransition>\r\n  );\r\n}\r\nexport default Header;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contacs/add\", (name, number) => ({\r\n  payload: { contact: { id: uuidv4(), name, number } },\r\n}));\r\n\r\nconst removeContact = createAction(\"contacts/remove\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, removeContact, changeFilter };\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onRemoveContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames={styles}>\r\n        <li className={styles.contactListItem}>\r\n          <p>{name}</p>\r\n          <p>{number}</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemoveContact(id)}\r\n            className={styles.button}\r\n          ></button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  const visibleContacts = state.contacts.items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.removeContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleNumberChange = (e) => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  handleAddContact = () => {\r\n    if ((this.state.name, this.state.number) !== \"\") {\r\n      this.props.onAddContact(this.state.name, this.state.number);\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form}>\r\n        <label className={styles.label}>\r\n          {\" \"}\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            className={styles.input}\r\n            required\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleNumberChange}\r\n            className={styles.input}\r\n            required\r\n          ></input>\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          onClick={this.handleAddContact}\r\n          className={styles.button}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          className={styles.input}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport ContactsList from \"./ContactsList/ContactsList\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport styles from \"./App.module.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <ContactForm />\r\n      <h3 className={styles.heading}>Contacts</h3>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"../contacts/contactsActions\";\r\n\r\nconst onAddContact = (state, action) => [...state, action.payload.contact];\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: onAddContact,\r\n  [contactsActions.removeContact]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n//   componentDidMount() {\r\n//     const addedContacts = localStorage.getItem(\"contacts\");\r\n//     if (addedContacts) {\r\n//       this.setState({\r\n//         contacts: JSON.parse(addedContacts),\r\n//       });\r\n//     }\r\n//   }\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.contacts !== this.state.contacts) {\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//     }\r\n//     if (this.state.alert === true) {\r\n//       setTimeout(() => {\r\n//         this.setState({ alert: false });\r\n//       }, 5000);\r\n//     }\r\n//   }\r\n\r\n//     this.setState((prevState) => {\r\n//       const addedContact = prevState.contacts.map((contact) => contact.name);\r\n\r\n//       if (addedContact.includes(name)) {\r\n//         return { alert: true };\r\n//       } else return { contacts: [...prevState.contacts, contact] };\r\n//     });\r\n//   };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2uDC3\",\"input\":\"ContactForm_input__gKf1a\",\"button\":\"ContactForm_button__3LnRe\"};"],"sourceRoot":""}